{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, map, of } from 'rxjs';\nimport { BASE_API_URL } from 'src/app/config/api';\nimport { addItemToCartFailure, addItemToCartSuccess, getCartFailure, getCartSuccess, removeCartItemFailure, removeCartItemSuccess, updateCartItemFailure, updateCartItemSuccess } from './cart.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class CartService {\n  constructor(store, http, router, route) {\n    this.store = store;\n    this.http = http;\n    this.router = router;\n    this.route = route;\n    this.apiUrl = BASE_API_URL;\n  }\n  addItemToCart(reqData) {\n    const url = `${this.apiUrl}/api/cart/add`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json'\n    });\n    return this.http.put(url, reqData, {\n      headers\n    }).pipe(map(data => {\n      console.log('added item ', data);\n      return addItemToCartSuccess({\n        payload: data\n      });\n    }), catchError(error => {\n      return of(addItemToCartFailure(error.response && error.response.data.message ? error.response.data.message : error.message));\n    })).subscribe(action => this.store.dispatch(action));\n  }\n  getCart() {\n    const url = `${this.apiUrl}/api/cart/`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json'\n    });\n    return this.http.get(url, {\n      headers\n    }).pipe(map(data => {\n      return getCartSuccess({\n        payload: data\n      });\n    }), catchError(error => {\n      return of(getCartFailure(error.response && error.response.data.message ? error.response.data.message : error.message));\n    })).subscribe(action => this.store.dispatch(action));\n  }\n  removeCartItem(cartItemId) {\n    const url = `${this.apiUrl}/api/cart_items/${cartItemId}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json'\n    });\n    return this.http.delete(url, {\n      headers\n    }).pipe(map(data => {\n      console.log('remove item ', data);\n      return removeCartItemSuccess({\n        cartItemId\n      });\n    }), catchError(error => {\n      return of(removeCartItemFailure(error.response && error.response.data.message ? error.response.data.message : error.message));\n    })).subscribe(action => this.store.dispatch(action));\n  }\n  updateCartItem(cartItemId, reqData) {\n    const url = `${this.apiUrl}/api/cart_items/${cartItemId}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json'\n    });\n    return this.http.put(url, reqData.data, {\n      headers\n    }).pipe(map(data => {\n      console.log('update item to ', data);\n      return updateCartItemSuccess({\n        payload: data\n      });\n    }), catchError(error => {\n      return of(updateCartItemFailure(error.response && error.response.data.message ? error.response.data.message : error.message));\n    })).subscribe(action => this.store.dispatch(action));\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.Router), i0.ɵɵinject(i3.ActivatedRoute));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"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","names":["HttpHeaders","catchError","map","of","BASE_API_URL","addItemToCartFailure","addItemToCartSuccess","getCartFailure","getCartSuccess","removeCartItemFailure","removeCartItemSuccess","updateCartItemFailure","updateCartItemSuccess","CartService","constructor","store","http","router","route","addItemToCart","reqData","url","apiUrl","headers","Authorization","localStorage","getItem","put","pipe","data","console","log","payload","error","response","message","subscribe","action","dispatch","getCart","get","removeCartItem","cartItemId","delete","updateCartItem","factory","providedIn"],"sourceRoot":"","sources":["D:\\project-angular-sale-website\\ecommerce-angular\\src\\app\\State\\Cart\\cart.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { catchError, map, of } from 'rxjs';\nimport { BASE_API_URL } from 'src/app/config/api';\nimport {\n  addItemToCartFailure,\n  addItemToCartSuccess,\n  getCartFailure,\n  getCartSuccess,\n  removeCartItemFailure,\n  removeCartItemSuccess,\n  updateCartItemFailure,\n  updateCartItemSuccess,\n} from './cart.action';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  apiUrl = BASE_API_URL;\n\n  constructor(\n    private store: Store,\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  addItemToCart(reqData: any) {\n    const url = `${this.apiUrl}/api/cart/add`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .put(url, reqData, { headers })\n      .pipe(\n        map((data: any) => {\n          console.log('added item ', data);\n          return addItemToCartSuccess({ payload: data });\n        }),\n        catchError((error: any) => {\n          return of(\n            addItemToCartFailure(\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n            )\n          );\n        })\n      )\n      .subscribe((action) => this.store.dispatch(action));\n  }\n\n  getCart() {\n    const url = `${this.apiUrl}/api/cart/`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .get(url, { headers })\n      .pipe(\n        map((data: any) => {\n          return getCartSuccess({ payload: data });\n        }),\n        catchError((error: any) => {\n          return of(\n            getCartFailure(\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n            )\n          );\n        })\n      )\n      .subscribe((action) => this.store.dispatch(action));\n  }\n\n  removeCartItem(cartItemId: number) {\n    const url = `${this.apiUrl}/api/cart_items/${cartItemId}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .delete(url, { headers })\n      .pipe(\n        map((data: any) => {\n          console.log('remove item ', data);\n          return removeCartItemSuccess({ cartItemId });\n        }),\n        catchError((error: any) => {\n          return of(\n            removeCartItemFailure(\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n            )\n          );\n        })\n      )\n      .subscribe((action) => this.store.dispatch(action));\n  }\n\n  updateCartItem(cartItemId: number, reqData: any) {\n    const url = `${this.apiUrl}/api/cart_items/${cartItemId}`;\n    const headers = new HttpHeaders({\n      Authorization: `Bearer ${localStorage.getItem('jwt')}`,\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .put(url, reqData.data, { headers })\n      .pipe(\n        map((data: any) => {\n          console.log('update item to ', data);\n          return updateCartItemSuccess({ payload: data });\n        }),\n        catchError((error: any) => {\n          return of(\n            updateCartItemFailure(\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n            )\n          );\n        })\n      )\n      .subscribe((action) => this.store.dispatch(action));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}