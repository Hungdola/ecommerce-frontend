{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { login, loginFailure, loginSuccess, register, registerFailure, registerSuccess } from \"./auth.actions\";\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\nexport const authReducer = createReducer(initialState, on(login, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(loginSuccess, (state, {\n  user\n}) => ({\n  ...state,\n  loading: false,\n  error: null,\n  user\n})), on(loginFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: true,\n  error: error\n})), on(register, state => ({\n  ...state,\n  loading: true,\n  error: null\n})), on(registerSuccess, (state, {\n  user\n}) => ({\n  ...state,\n  loading: false,\n  error: null,\n  user\n})), on(registerFailure, (state, {\n  error\n}) => ({\n  ...state,\n  loading: true,\n  error: error\n})));","map":{"version":3,"mappings":"AAAA,SAAQA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC9C,SAASC,KAAK,EAAEC,YAAY,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,eAAe,QAAQ,gBAAgB;AAC9G,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;CACV;AAED,OAAO,MAAMC,WAAW,GAAGZ,aAAa,CACpCQ,YAAY,EAEZP,EAAE,CAACC,KAAK,EAAGW,KAAK,KAAM;EAAC,GAAGA,KAAK;EAAEH,OAAO,EAAC,IAAI;EAAEC,KAAK,EAAE;AAAI,CAAC,CAAC,CAAC,EAC7DV,EAAE,CAACG,YAAY,EAAE,CAACS,KAAK,EAAE;EAACJ;AAAI,CAAC,MAAM;EAAC,GAAGI,KAAK;EAAEH,OAAO,EAAC,KAAK;EAAEC,KAAK,EAAE,IAAI;EAAEF;AAAI,CAAC,CAAC,CAAC,EACnFR,EAAE,CAACE,YAAY,EAAE,CAACU,KAAK,EAAE;EAACF;AAAK,CAAC,MAAM;EAAC,GAAGE,KAAK;EAAEH,OAAO,EAAC,IAAI;EAAEC,KAAK,EAAEA;AAAK,CAAC,CAAC,CAAC,EAE9EV,EAAE,CAACI,QAAQ,EAAGQ,KAAK,KAAM;EAAC,GAAGA,KAAK;EAAEH,OAAO,EAAC,IAAI;EAAEC,KAAK,EAAE;AAAI,CAAC,CAAC,CAAC,EAChEV,EAAE,CAACM,eAAe,EAAE,CAACM,KAAK,EAAE;EAACJ;AAAI,CAAC,MAAM;EAAC,GAAGI,KAAK;EAAEH,OAAO,EAAC,KAAK;EAAEC,KAAK,EAAE,IAAI;EAAEF;AAAI,CAAC,CAAC,CAAC,EACtFR,EAAE,CAACK,eAAe,EAAE,CAACO,KAAK,EAAE;EAACF;AAAK,CAAC,MAAM;EAAC,GAAGE,KAAK;EAAEH,OAAO,EAAC,IAAI;EAAEC,KAAK,EAAEA;AAAK,CAAC,CAAC,CAAC,CAEpF","names":["createReducer","on","login","loginFailure","loginSuccess","register","registerFailure","registerSuccess","initialState","user","loading","error","authReducer","state"],"sourceRoot":"","sources":["D:\\project-angular-sale-website\\ecommerce-angular\\src\\app\\State\\Auth\\auth.reducer.ts"],"sourcesContent":["import {createReducer, on } from \"@ngrx/store\";\r\nimport { login, loginFailure, loginSuccess, register, registerFailure, registerSuccess } from \"./auth.actions\";\r\nconst initialState = {\r\n    user: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport const authReducer = createReducer(\r\n    initialState,\r\n\r\n    on(login, (state) => ({...state, loading:true, error: null})),\r\n    on(loginSuccess, (state, {user}) => ({...state, loading:false, error: null, user})),\r\n    on(loginFailure, (state, {error}) => ({...state, loading:true, error: error})),\r\n\r\n    on(register, (state) => ({...state, loading:true, error: null})),\r\n    on(registerSuccess, (state, {user}) => ({...state, loading:false, error: null, user})),\r\n    on(registerFailure, (state, {error}) => ({...state, loading:true, error: error})),\r\n\r\n)"]},"metadata":{},"sourceType":"module","externalDependencies":[]}