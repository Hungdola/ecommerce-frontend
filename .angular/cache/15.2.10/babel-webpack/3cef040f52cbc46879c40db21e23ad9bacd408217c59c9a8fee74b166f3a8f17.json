{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError, map, of } from \"rxjs\";\nimport { BASE_API_URL } from \"src/app/config/api\";\nimport { getUserProfileFailure, getUserProfileSuccess } from \"./user.action\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ngrx/store\";\nexport class UserService {\n  constructor(http, store) {\n    this.http = http;\n    this.store = store;\n    this.apiUrl = BASE_API_URL + \"/api/users\";\n    this.headers = new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(\"jwt\")}`);\n  }\n  getUserProfile() {\n    return this.http.get(`${this.apiUrl}/profile`, {\n      headers: this.headers\n    }).pipe(map(user => {\n      console.log('user profile success ', user);\n      return getUserProfileSuccess({\n        userProfile: user\n      });\n    }), catchError(error => {\n      return of(getUserProfileFailure(error.response && error.response.data.message ? error.response.data.message : error.message));\n    })).subscribe(action => this.store.dispatch(action));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Store));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,UAAU,EAAEC,GAAG,EAAEC,EAAE,QAAQ,MAAM;AAC1C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,qBAAqB,EAAEC,qBAAqB,QAAQ,eAAe;;;;AAO5E,OAAM,MAAOC,WAAW;EAKpBC,YAAqBC,IAAgB,EAAUC,KAAY;IAAtC,SAAI,GAAJD,IAAI;IAAsB,UAAK,GAALC,KAAK;IAH5C,WAAM,GAAGN,YAAY,GAAC,YAAY;IAKtC,IAAI,CAACO,OAAO,GAAE,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC;EACjG;EAGAC,cAAc;IACV,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,UAAU,EAAE;MAACN,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC,CAACO,IAAI,CACxEhB,GAAG,CAAEiB,IAAS,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;MAE1C,OAAOb,qBAAqB,CAAC;QAACgB,WAAW,EAAEH;MAAI,CAAC,CAAC;IACrD,CAAC,CAAC,EACFlB,UAAU,CAAEsB,KAAK,IAAI;MACjB,OAAOpB,EAAE,CACLE,qBAAqB,CACjBkB,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,GAAGH,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,GAAEH,KAAK,CAACG,OAAO,CAC7F,CACJ;IACL,CAAC,CAAC,CACL,CAACC,SAAS,CAAEC,MAAM,IAAK,IAAI,CAAClB,KAAK,CAACmB,QAAQ,CAACD,MAAM,CAAC,CAAC;EACxD;EAAC;qBA1BQrB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAuB,SAAXvB,WAAW;IAAAwB,YAJR;EAAM","names":["HttpHeaders","catchError","map","of","BASE_API_URL","getUserProfileFailure","getUserProfileSuccess","UserService","constructor","http","store","headers","set","localStorage","getItem","getUserProfile","get","apiUrl","pipe","user","console","log","userProfile","error","response","data","message","subscribe","action","dispatch","factory","providedIn"],"sourceRoot":"","sources":["D:\\project-angular-sale-website\\ecommerce-angular\\src\\app\\State\\User\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { catchError, map, of } from \"rxjs\";\r\nimport { BASE_API_URL } from \"src/app/config/api\";\r\nimport { getUserProfileFailure, getUserProfileSuccess } from \"./user.action\";\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n\r\n})\r\n\r\nexport class UserService {\r\n\r\n    private apiUrl = BASE_API_URL+\"/api/users\"\r\n    headers: any\r\n\r\n    constructor( private http: HttpClient, private store: Store) {\r\n\r\n        this.headers= new HttpHeaders().set(\"Authorization\", `Bearer ${localStorage.getItem(\"jwt\")}`)\r\n    }\r\n\r\n\r\n    getUserProfile() {\r\n        return this.http.get(`${this.apiUrl}/profile`, {headers: this.headers}).pipe(\r\n            map((user: any) => {\r\n                console.log('user profile success ', user)\r\n\r\n                return getUserProfileSuccess({userProfile: user})\r\n            }),\r\n            catchError((error) => {\r\n                return of(\r\n                    getUserProfileFailure(\r\n                        error.response && error.response.data.message ? error.response.data.message: error.message\r\n                    )\r\n                )\r\n            })\r\n        ).subscribe((action) => this.store.dispatch(action))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}